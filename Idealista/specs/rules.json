{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "https://feeds.idealista.com/v6/schemas/rules.json",
  "title": "schema rules",
  "description": "version6 schema rules",
  "dateFormat": {
    "type": "string",
    "pattern": "^20[0-9][0-9]/[0-9][0-9]/(([0-2][0-9])|(3[0-1])) (([0-1][0-9])|(2[0-4])):([0-5][0-9]):([0-5][0-9])$"
  },
  "dateFormatNoHours": {
    "type": "string",
    "pattern": "^20[0-9][0-9]/(0[1-9]|1[0-2])/(([0-2][0-9])|(3[0-1]))$"
  },
  "emailFormat": {
    "type": "string",
    "pattern": "^(([a-zA-Z0-9-_\\.])+)@((?:[a-zA-Z0-9-_]+\\.)+)([a-zA-Z]{2,5})$"
  },
  "enumOperationType": {
    "enum": ["rent","sale","rentToOwn"]
  },
  "enumPropertyStatus": {
    "enum": ["active","pending","quality","error"]
  },
  "enumPropertyVisibility": {
    "enum": ["idealista","microsite","private"],
    "description": "If the visibility is 'idealista', you can find the property using the idealista's search engine; 'microsite', the property is only published on the real estate agency microsite; 'private', the property is not published and only the customer can see it."
  },
  "feedkey": {
    "type": "string",
    "pattern": "^ilc([a-z]|[0-9]){40}$"
  },
  "integer1to9": {
    "type": "integer",
    "minimum": 1,
    "maximum": 9
  },
  "integer1to99": {
    "type": "integer",
    "minimum": 1,
    "maximum": 99
  },
  "integer1to999": {
    "type": "integer",
    "minimum": 1,
    "maximum": 999
  },
  "integer1to9999": {
    "type": "integer",
    "minimum": 1,
    "maximum": 9999
  },
  "integer1to99999": {
    "type": "integer",
    "minimum": 1,
    "maximum": 99999
  },
  "integer1to999999": {
    "type": "integer",
    "minimum": 1,
    "maximum": 999999
  },
  "integer1to99999999": {
    "type": "integer",
    "minimum": 1,
    "maximum": 99999999
  },
  "integer1to999999999": {
    "type": "integer",
    "minimum": 1,
    "maximum": 999999999
  },
  "number0to9": {
    "type": "number",
    "minimum": 0,
    "maximum": 9
  },
  "number0to12": {
    "type": "number",
    "minimum": 0,
    "maximum": 12
  },
  "number1to12": {
    "type": "number",
    "minimum": 1,
    "maximum": 12
  },
  "number0to99": {
    "type": "number",
    "minimum": 0,
    "maximum": 99
  },
  "number1to999": {
    "type": "number",
    "minimum": 1,
    "maximum": 999
  },
  "number1to9999": {
    "type": "number",
    "minimum": 1,
    "maximum": 9999
  },
  "phoneFormat": {
    "type": "string",
    "pattern": "^[0-9]{5,12}$"
  },
  "phonePrefixFormat": {
    "type": "string",
    "pattern": "^[1-9][0-9]{0,2}$"
  },
  "stringTo4": {
    "type": "string",
    "pattern": "^.{0,4}$"
  },
  "stringTo10": {
    "type": "string",
    "pattern": "^.{0,10}$"
  },
  "stringTo20": {
    "type": "string",
    "pattern": "^.{0,20}$"
  },
  "stringTo50": {
    "type": "string",
    "pattern": "^.{0,50}$"
  },
  "stringTo60": {
    "type": "string",
    "pattern": "^.{0,60}$"
  },
  "stringTo100": {
    "type": "string",
    "pattern": "^.{0,100}$"
  },
  "stringTo150": {
    "type": "string",
    "pattern": "^.{0,150}$"
  },
  "stringTo200": {
    "type": "string",
    "pattern": "^.{0,200}$"
  },
  "stringTo255": {
    "type": "string",
    "pattern": "^.{0,255}$"
  },
  "stringTo500": {
    "type": "string",
    "pattern": "^.{0,500}$"
  },
  "stringTo4000": {
    "type": "string",
    "pattern": "^.{0,4000}$"
  },
  "urlFormat": {
    "type": "string",
    "pattern": "^(http)(s?)://.*$"
  }
}